[{"/home/agevi/web/buget_app/src/index.js":"1","/home/agevi/web/buget_app/src/App.js":"2","/home/agevi/web/buget_app/src/context/context.js":"3","/home/agevi/web/buget_app/src/styles.js":"4","/home/agevi/web/buget_app/src/context/contextReducer.js":"5","/home/agevi/web/buget_app/src/components/Main/Main.jsx":"6","/home/agevi/web/buget_app/src/components/Details/Details.jsx":"7","/home/agevi/web/buget_app/src/components/Main/styles.js":"8","/home/agevi/web/buget_app/src/components/Details/styles.js":"9","/home/agevi/web/buget_app/src/useTransactions.js":"10","/home/agevi/web/buget_app/src/components/Main/Form/Form.jsx":"11","/home/agevi/web/buget_app/src/components/Main/List/List.jsx":"12","/home/agevi/web/buget_app/src/constants/categories.js":"13","/home/agevi/web/buget_app/src/components/Main/List/styles.js":"14","/home/agevi/web/buget_app/src/utils/formatDate.js":"15","/home/agevi/web/buget_app/src/components/Main/Form/styles.js":"16"},{"size":392,"mtime":1646656890532,"results":"17","hashOfConfig":"18"},{"size":882,"mtime":1646605478570,"results":"19","hashOfConfig":"18"},{"size":2276,"mtime":1646724618769,"results":"20","hashOfConfig":"18"},{"size":551,"mtime":1645573601610,"results":"21","hashOfConfig":"18"},{"size":685,"mtime":1646722420503,"results":"22","hashOfConfig":"18"},{"size":1092,"mtime":1646725057489,"results":"23","hashOfConfig":"18"},{"size":626,"mtime":1646651904006,"results":"24","hashOfConfig":"18"},{"size":489,"mtime":1645573601610,"results":"25","hashOfConfig":"18"},{"size":236,"mtime":1645573601610,"results":"26","hashOfConfig":"18"},{"size":1622,"mtime":1646651752366,"results":"27","hashOfConfig":"18"},{"size":4633,"mtime":1646727458963,"results":"28","hashOfConfig":"18"},{"size":1530,"mtime":1646590832500,"results":"29","hashOfConfig":"18"},{"size":1659,"mtime":1646591808443,"results":"30","hashOfConfig":"18"},{"size":398,"mtime":1645573601610,"results":"31","hashOfConfig":"18"},{"size":333,"mtime":1646595310118,"results":"32","hashOfConfig":"18"},{"size":234,"mtime":1645573601610,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"v1dtko",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/home/agevi/web/buget_app/src/index.js",[],["68","69"],"/home/agevi/web/buget_app/src/App.js",[],"/home/agevi/web/buget_app/src/context/context.js",[],"/home/agevi/web/buget_app/src/styles.js",[],"/home/agevi/web/buget_app/src/context/contextReducer.js",[],"/home/agevi/web/buget_app/src/components/Main/Main.jsx",[],"/home/agevi/web/buget_app/src/components/Details/Details.jsx",[],"/home/agevi/web/buget_app/src/components/Main/styles.js",[],"/home/agevi/web/buget_app/src/components/Details/styles.js",[],"/home/agevi/web/buget_app/src/useTransactions.js",[],"/home/agevi/web/buget_app/src/components/Main/Form/Form.jsx",["70"],"import React,{useState,useContext,useEffect} from 'react'\nimport { TextField,Typography,Grid,Button,FormControl,InputLabel,Select,MenuItem} from '@material-ui/core'\nimport { ExpenseTrackerContext } from '../../../context/context'\nimport { v4 as uuidv4 }from 'uuid';\nimport { useSpeechContext } from '@speechly/react-client';\nimport useStyles from './styles'\nimport { incomeCategories,expenseCategories } from '../../../constants/categories';\nimport formatDate from '../../../utils/formatDate';\nimport CustomizedSnackbar from '../../Snackbar';\nconst initialState={\n  amount:'',\n  category:'',\n  type:'Income', \n  date:formatDate(new Date())\n}\n\nconst Form = () => {\n    const classes =useStyles();\n    const {formData,setFormData}=useState(initialState);\n    const {addTransaction}=useContext(ExpenseTrackerContext);\n    const {segment}=useSpeechContext();\n    const [open,setOpen]=React.useState(false)\n\n    const createTransaction=()=>{\n      if(Number.isNaN(Number(formData.amount)) || !formData.date.includes('-') )return;\n\n      const transaction= {...formData,amount:Number(formData.amount),id :uuidv4()}\n      setOpen(true)\n      addTransaction(transaction);\n      setFormData(initialState);\n    };\n//use effect:call specific function at certain point in components,e,g start,onchange\n//logic to add transaction usig voice\n//useEffecrt, 2parameters : 1.callback function 2.dependanct array\nuseEffect( () =>{\n if(segment){//if segment exists\n    if(segment.intent.intent==='add_expense'){\n      setFormData({...formatDate,type:'Expense'})\n    } else if(segment.intent.intent==='add_income'){\n      setFormData( { ...formData,type:'Income'});\n    }else if( segment.isFinal && segment.intent.intent===\"create_transaction\"){\n      return createTransaction()\n    }else if (segment.isFinal && segment.intent.intent===\"cancel_transaction\"){\n      return setFormData(initialState);\n    }\n    segment.entities.forEach( (e)=>{\n      const category =`${e.value.charAt(0)}${e.value.slice(1).toLocaleLowerCase()}`\n      switch (e.type){\n        case 'amount':\n          setFormData({...formData,amount:e.value})\n          break;\n          case 'category ':\n            if(incomeCategories.map( (ic) => ic.type).includes(category)){\n              setFormData({...formData, type:'Income',category})\n            }else if(expenseCategories.map( (ic) => ic.type).includes(category)){\n              setFormData({...formData, type:'Expense',category})   \n            }\n         \n          break;\n          case 'date':\n          setFormData({...formData,date:e.value})\n          break;\n          default:\n            break;\n      }\n    })\n    if(segment.isFinal && formData.amount && formData.category && formData.type && formData.date ){\n      createTransaction();\n    }\n }\n},[segment,createTransaction,formData,setFormData])\n\n  \n   const selectedCategories =formData?.type ==='Income'? incomeCategories:expenseCategories;\n\n  return (\n       <Grid container spacing ={2}>\n         <CustomizedSnackbar open={open} setOpen={setOpen}/>\n     <Grid items xs={12}> \n     <Typography align =\"centre\" variant =\"subtitle2\"gutterBottom>\n          { segment && segment.words.map(  (w)=>w.value).join(\" \")}\n     </Typography>  \n     </Grid>\n\n     <Grid item xs ={6}>\n       <FormControl fullWidth>\n        <InputLabel> Type </InputLabel>\n        <Select value ={formData?.type} onChange={ (e)=>setFormData({...formData,type:e.target.value})}>\n        {/* {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)} */}\n         <MenuItem value =\"Income\">Income</MenuItem>  \n         <MenuItem value =\"Expense\">Expense</MenuItem> \n        </Select>\n       </FormControl>\n     </Grid>\n\n     <Grid item xs ={6}>\n      <FormControl fullWidth>\n       <InputLabel> Category</InputLabel>\n       <Select value ={formData?.category} onChange={ (e)=>setFormData({...formData,category:e.target.value})}>\n       {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\n        \n\n       </Select>\n      </FormControl>\n     </Grid>\n\n     <Grid item xs ={6}>\n         <TextField type= \"number\" label =\"Amount\" fullWidth value ={formData?.amount} onchange={(e)=>setFormData({...formData,amount : e.target.value}) }/>\n       </Grid>\n\n       <Grid item xs ={6}>\n         <TextField  type= \"date\" label =\"Date\" fullWidth value ={formData?.date} onchange={(e)=>setFormData({...formData,date: formatDate(e.target.value)}) }/>\n       </Grid>\n       <Button className={classes.button} variant=\"outlined\" color =\"primary\" fullWidth onclick={createTransaction}>Create </Button>\n\n   </Grid>\n  ) \n}\n\nexport default Form ;","/home/agevi/web/buget_app/src/components/Main/List/List.jsx",[],"/home/agevi/web/buget_app/src/constants/categories.js",[],"/home/agevi/web/buget_app/src/components/Main/List/styles.js",[],"/home/agevi/web/buget_app/src/utils/formatDate.js",[],"/home/agevi/web/buget_app/src/components/Main/Form/styles.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":24,"column":11,"nodeType":"77","endLine":31,"endColumn":6,"suggestions":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"react-hooks/exhaustive-deps","The 'createTransaction' function makes the dependencies of useEffect Hook (at line 71) change on every render. To fix this, wrap the definition of 'createTransaction' in its own useCallback() Hook.","VariableDeclarator",["81"],"no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},"Wrap the definition of 'createTransaction' in its own useCallback() Hook.",{"range":"84","text":"85"},[931,1202],"useCallback(()=>{\n      if(Number.isNaN(Number(formData.amount)) || !formData.date.includes('-') )return;\n\n      const transaction= {...formData,amount:Number(formData.amount),id :uuidv4()}\n      setOpen(true)\n      addTransaction(transaction);\n      setFormData(initialState);\n    })"]