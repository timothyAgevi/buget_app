[{"/home/agevi/web/speechly_expense_tracker_project/src/index.js":"1","/home/agevi/web/speechly_expense_tracker_project/src/App.js":"2","/home/agevi/web/speechly_expense_tracker_project/src/context/context.js":"3","/home/agevi/web/speechly_expense_tracker_project/src/styles.js":"4","/home/agevi/web/speechly_expense_tracker_project/src/context/contextReducer.js":"5","/home/agevi/web/speechly_expense_tracker_project/src/components/index.js":"6","/home/agevi/web/speechly_expense_tracker_project/src/components/InfoCard.jsx":"7","/home/agevi/web/speechly_expense_tracker_project/src/components/Snackbar/Snackbar.jsx":"8","/home/agevi/web/speechly_expense_tracker_project/src/components/Snackbar/styles.js":"9","/home/agevi/web/speechly_expense_tracker_project/src/components/Main/Main.jsx":"10","/home/agevi/web/speechly_expense_tracker_project/src/components/Details/Details.jsx":"11","/home/agevi/web/speechly_expense_tracker_project/src/components/Main/styles.js":"12","/home/agevi/web/speechly_expense_tracker_project/src/components/Details/styles.js":"13","/home/agevi/web/speechly_expense_tracker_project/src/useTransactions.js":"14","/home/agevi/web/speechly_expense_tracker_project/src/components/Main/Form/Form.jsx":"15","/home/agevi/web/speechly_expense_tracker_project/src/components/Main/List/List.jsx":"16","/home/agevi/web/speechly_expense_tracker_project/src/constants/categories.js":"17","/home/agevi/web/speechly_expense_tracker_project/src/components/Main/Form/styles.js":"18","/home/agevi/web/speechly_expense_tracker_project/src/components/Main/List/styles.js":"19","/home/agevi/web/speechly_expense_tracker_project/src/utils/formatDate.js":"20","/home/agevi/web/buget_app/src/index.js":"21","/home/agevi/web/buget_app/src/App.js":"22","/home/agevi/web/buget_app/src/context/context.js":"23","/home/agevi/web/buget_app/src/styles.js":"24","/home/agevi/web/buget_app/src/context/contextReducer.js":"25","/home/agevi/web/buget_app/src/components/Main/Main.jsx":"26","/home/agevi/web/buget_app/src/components/Details/Details.jsx":"27","/home/agevi/web/buget_app/src/components/Main/styles.js":"28","/home/agevi/web/buget_app/src/components/Details/styles.js":"29","/home/agevi/web/buget_app/src/useTransactions.js":"30","/home/agevi/web/buget_app/src/components/Main/Form/Form.jsx":"31","/home/agevi/web/buget_app/src/components/Main/List/List.jsx":"32","/home/agevi/web/buget_app/src/constants/categories.js":"33","/home/agevi/web/buget_app/src/components/Main/List/styles.js":"34","/home/agevi/web/buget_app/src/utils/formatDate.js":"35","/home/agevi/web/buget_app/src/components/Main/Form/styles.js":"36","/home/agevi/web/buget_app/src/components/Snackbar/Snackbar.jsx":"37","/home/agevi/web/buget_app/src/components/Snackbar/styles.js":"38"},{"size":431,"mtime":1645515011709,"results":"39","hashOfConfig":"40"},{"size":1440,"mtime":1645515011709,"results":"41","hashOfConfig":"40"},{"size":2032,"mtime":1645515011709,"results":"42","hashOfConfig":"40"},{"size":582,"mtime":1645515011709,"results":"43","hashOfConfig":"40"},{"size":583,"mtime":1645515011709,"results":"44","hashOfConfig":"40"},{"size":216,"mtime":1645515011709,"results":"45","hashOfConfig":"40"},{"size":460,"mtime":1645515011709,"results":"46","hashOfConfig":"40"},{"size":797,"mtime":1645515011709,"results":"47","hashOfConfig":"40"},{"size":206,"mtime":1645515011709,"results":"48","hashOfConfig":"40"},{"size":1271,"mtime":1645515011709,"results":"49","hashOfConfig":"40"},{"size":725,"mtime":1645515011709,"results":"50","hashOfConfig":"40"},{"size":514,"mtime":1645515011709,"results":"51","hashOfConfig":"40"},{"size":247,"mtime":1645515011709,"results":"52","hashOfConfig":"40"},{"size":1124,"mtime":1645515011709,"results":"53","hashOfConfig":"40"},{"size":4946,"mtime":1645515011709,"results":"54","hashOfConfig":"40"},{"size":1403,"mtime":1645515011709,"results":"55","hashOfConfig":"40"},{"size":1693,"mtime":1645515011709,"results":"56","hashOfConfig":"40"},{"size":247,"mtime":1645515011709,"results":"57","hashOfConfig":"40"},{"size":416,"mtime":1645515011709,"results":"58","hashOfConfig":"40"},{"size":301,"mtime":1645515011709,"results":"59","hashOfConfig":"40"},{"size":392,"mtime":1646656890532,"results":"60","hashOfConfig":"61"},{"size":882,"mtime":1646605478570,"results":"62","hashOfConfig":"61"},{"size":2276,"mtime":1646724618769,"results":"63","hashOfConfig":"61"},{"size":551,"mtime":1645573601610,"results":"64","hashOfConfig":"61"},{"size":685,"mtime":1646722420503,"results":"65","hashOfConfig":"61"},{"size":1032,"mtime":1646733193046,"results":"66","hashOfConfig":"61"},{"size":626,"mtime":1646651904006,"results":"67","hashOfConfig":"61"},{"size":489,"mtime":1645573601610,"results":"68","hashOfConfig":"61"},{"size":236,"mtime":1645573601610,"results":"69","hashOfConfig":"61"},{"size":1622,"mtime":1646651752366,"results":"70","hashOfConfig":"61"},{"size":4626,"mtime":1646753634455,"results":"71","hashOfConfig":"61"},{"size":1530,"mtime":1646590832500,"results":"72","hashOfConfig":"61"},{"size":1659,"mtime":1646591808443,"results":"73","hashOfConfig":"61"},{"size":398,"mtime":1645573601610,"results":"74","hashOfConfig":"61"},{"size":333,"mtime":1646595310118,"results":"75","hashOfConfig":"61"},{"size":234,"mtime":1645573601610,"results":"76","hashOfConfig":"61"},{"size":708,"mtime":1646728910352,"results":"77","hashOfConfig":"61"},{"size":195,"mtime":1646727766423,"results":"78","hashOfConfig":"61"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fqkyww",{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"v1dtko",{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/agevi/web/speechly_expense_tracker_project/src/index.js",[],"/home/agevi/web/speechly_expense_tracker_project/src/App.js",[],"/home/agevi/web/speechly_expense_tracker_project/src/context/context.js",[],"/home/agevi/web/speechly_expense_tracker_project/src/styles.js",[],"/home/agevi/web/speechly_expense_tracker_project/src/context/contextReducer.js",[],"/home/agevi/web/speechly_expense_tracker_project/src/components/index.js",[],"/home/agevi/web/speechly_expense_tracker_project/src/components/InfoCard.jsx",[],"/home/agevi/web/speechly_expense_tracker_project/src/components/Snackbar/Snackbar.jsx",[],"/home/agevi/web/speechly_expense_tracker_project/src/components/Snackbar/styles.js",[],"/home/agevi/web/speechly_expense_tracker_project/src/components/Main/Main.jsx",["160","161","162"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { Card, CardHeader, CardContent, Typography, Grid, Divider } from '@material-ui/core';\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport { ExpenseTrackerContext } from '../../context/context';\r\nimport useStyles from './styles';\r\nimport Form from './Form/Form';\r\nimport List from './List/List';\r\nimport InfoCard from '../InfoCard';\r\n\r\nconst ExpenseTracker = () => {\r\n  const classes = useStyles();\r\n  const { balance } = useContext(ExpenseTrackerContext);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader title=\"Expense Tracker\" subheader=\"Powered by Speechly\" />\r\n      <CardContent>\r\n        <Typography align=\"center\" variant=\"h5\">Total Balance ${balance}</Typography>\r\n        <Typography variant=\"subtitle1\" style={{ lineHeight: '1.5em', marginTop: '20px' }}>\r\n          <InfoCard />\r\n        </Typography>\r\n        <Divider className={classes.divider} />\r\n        <Form />\r\n      </CardContent>\r\n      <CardContent className={classes.cartContent}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <List />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseTracker;\r\n","/home/agevi/web/speechly_expense_tracker_project/src/components/Details/Details.jsx",[],"/home/agevi/web/speechly_expense_tracker_project/src/components/Main/styles.js",[],"/home/agevi/web/speechly_expense_tracker_project/src/components/Details/styles.js",[],"/home/agevi/web/speechly_expense_tracker_project/src/useTransactions.js",[],"/home/agevi/web/speechly_expense_tracker_project/src/components/Main/Form/Form.jsx",["163"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport Snackbar from '../../Snackbar/Snackbar';\r\nimport formatDate from '../../../utils/formatDate';\r\nimport { ExpenseTrackerContext } from '../../../context/context';\r\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\r\nimport useStyles from './styles';\r\n\r\nconst initialState = {\r\n  amount: '',\r\n  category: '',\r\n  type: 'Income',\r\n  date: formatDate(new Date()),\r\n};\r\n\r\nconst NewTransactionForm = () => {\r\n  const classes = useStyles();\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const [formData, setFormData] = useState(initialState);\r\n  const { segment } = useSpeechContext();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const createTransaction = () => {\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\r\n\r\n    if (incomeCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Income' });\r\n    } else if (expenseCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Expense' });\r\n    }\r\n\r\n    setOpen(true);\r\n    addTransaction({ ...formData, amount: Number(formData.amount), id: uuidv4() });\r\n    setFormData(initialState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === 'add_expense') {\r\n        setFormData({ ...formData, type: 'Expense' });\r\n      } else if (segment.intent.intent === 'add_income') {\r\n        setFormData({ ...formData, type: 'Income' });\r\n      } else if (segment.isFinal && segment.intent.intent === 'create_transaction') {\r\n        return createTransaction();\r\n      } else if (segment.isFinal && segment.intent.intent === 'cancel_transaction') {\r\n        return setFormData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((s) => {\r\n        const category = `${s.value.charAt(0)}${s.value.slice(1).toLowerCase()}`;\r\n\r\n        switch (s.type) {\r\n          case 'amount':\r\n            setFormData({ ...formData, amount: s.value });\r\n            break;\r\n          case 'category':\r\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Income', category });\r\n            } else if (expenseCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Expense', category });\r\n            }\r\n            break;\r\n          case 'date':\r\n            setFormData({ ...formData, date: s.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      if (segment.isFinal && formData.amount && formData.category && formData.type && formData.date) {\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment]);\r\n\r\n  const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Snackbar open={open} setOpen={setOpen} />\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n        {segment ? (\r\n        <div className=\"segment\">\r\n          {segment.words.map((w) => w.value).join(\" \")}\r\n        </div>\r\n      ) : null}\r\n         {/* {isSpeaking ? <BigTranscript /> : 'Start adding transactions'}  */}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value })}>\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\r\n            {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={6}>\r\n        <TextField type=\"number\" label=\"Amount\" value={formData.amount} onChange={(e) => setFormData({ ...formData, amount: e.target.value })} fullWidth />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField fullWidth label=\"Date\" type=\"date\" value={formData.date} onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value) })} />\r\n      </Grid>\r\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>Create</Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default NewTransactionForm;\r\n","/home/agevi/web/speechly_expense_tracker_project/src/components/Main/List/List.jsx",[],"/home/agevi/web/speechly_expense_tracker_project/src/constants/categories.js",[],"/home/agevi/web/speechly_expense_tracker_project/src/components/Main/Form/styles.js",[],"/home/agevi/web/speechly_expense_tracker_project/src/components/Main/List/styles.js",[],"/home/agevi/web/speechly_expense_tracker_project/src/utils/formatDate.js",["164"],"export default (date) => {\r\n  const d = new Date(date);\r\n  let month = `${d.getMonth() + 1}`;\r\n  let day = `${d.getDate()}`;\r\n  const year = d.getFullYear();\r\n\r\n  if (month.length < 2) { month = `0${month}`; }\r\n  if (day.length < 2) { day = `0${day}`; }\r\n\r\n  return [year, month, day].join('-');\r\n};\r\n","/home/agevi/web/buget_app/src/index.js",[],"/home/agevi/web/buget_app/src/App.js",[],"/home/agevi/web/buget_app/src/context/context.js",[],"/home/agevi/web/buget_app/src/styles.js",[],"/home/agevi/web/buget_app/src/context/contextReducer.js",[],"/home/agevi/web/buget_app/src/components/Main/Main.jsx",[],"/home/agevi/web/buget_app/src/components/Details/Details.jsx",[],"/home/agevi/web/buget_app/src/components/Main/styles.js",[],"/home/agevi/web/buget_app/src/components/Details/styles.js",[],"/home/agevi/web/buget_app/src/useTransactions.js",[],"/home/agevi/web/buget_app/src/components/Main/Form/Form.jsx",["165"],"import React,{useState,useContext,useEffect} from 'react'\nimport { TextField,Typography,Grid,Button,FormControl,InputLabel,Select,MenuItem} from '@material-ui/core'\nimport { ExpenseTrackerContext } from '../../../context/context'\nimport { v4 as uuidv4 }from 'uuid';\nimport { useSpeechContext } from '@speechly/react-client';\nimport useStyles from './styles'\nimport { incomeCategories,expenseCategories } from '../../../constants/categories';\nimport formatDate from '../../../utils/formatDate';\nimport CustomizedSnackbar from '../../Snackbar/Snackbar'; \nconst initialState={\n  amount:'',\n  category:'',\n  type:'Income', \n  date:formatDate(new Date())\n}\n\nconst NewTransactionForm = () => {\n    const classes =useStyles();\n    const {formData,setFormData}=useState(initialState);\n    const {addTransaction}=useContext(ExpenseTrackerContext);\n    const {segment}=useSpeechContext();\n    const [open,setOpen]=useState(false)\n\n    const createTransaction=()=>{\n      if(Number.isNaN(Number(formData.amount)) || !formData.date.includes('-') )return;\n\n      const transaction= {...formData,amount:Number(formData.amount),id :uuidv4()}\n      setOpen(true)\n      addTransaction(transaction);\n      setFormData(initialState);\n    };\n//use effect:call specific function at certain point in components,e,g start,onchange\n//logic to add transaction usig voice\n//useEffecrt, 2parameters : 1.callback function 2.dependanct array\nuseEffect( () =>{\n if(segment){//if segment exists\n    if(segment.intent.intent==='add_expense'){\n      setFormData({...formatDate,type:'Expense'})\n    } else if(segment.intent.intent==='add_income'){\n      setFormData( { ...formData,type:'Income'});\n    }else if( segment.isFinal && segment.intent.intent===\"create_transaction\"){\n      return createTransaction()\n    }else if (segment.isFinal && segment.intent.intent===\"cancel_transaction\"){\n      return setFormData(initialState);\n    }\n    segment.entities.forEach( (e)=>{\n      const category =`${e.value.charAt(0)}${e.value.slice(1).toLocaleLowerCase()}`\n      switch (e.type){\n        case 'amount':\n          setFormData({...formData,amount:e.value})\n          break;\n          case 'category ':\n            if(incomeCategories.map( (ic) => ic.type).includes(category)){\n              setFormData({...formData, type:'Income',category})\n            }else if(expenseCategories.map( (ic) => ic.type).includes(category)){\n              setFormData({...formData, type:'Expense',category})   \n            }\n         \n          break;\n          case 'date':\n          setFormData({...formData,date:e.value})\n          break;\n          default:\n            break;\n      }\n    })\n    if(segment.isFinal && formData.amount && formData.category && formData.type && formData.date ){\n      createTransaction();\n    }\n }\n},[segment])\n\n  \n   const selectedCategories =formData?.type ==='Income'? incomeCategories:expenseCategories;\n\n  return (\n       <Grid container spacing ={2}>\n         <CustomizedSnackbar open={open} setOpen={setOpen}/>\n     <Grid items xs={12}> \n     <Typography align =\"centre\" variant =\"subtitle2\"gutterBottom>\n          { segment && segment.words.map(  (w)=>w.value).join(\" \")}\n     </Typography>  \n     </Grid>\n\n     <Grid item xs ={6}>\n       <FormControl fullWidth>\n        <InputLabel> Type </InputLabel>\n        <Select value ={formData?.type} onChange={ (e)=>setFormData({...formData,type:e.target.value})}>\n        {/* {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)} */}\n         <MenuItem value =\"Income\">Income</MenuItem>  \n         <MenuItem value =\"Expense\">Expense</MenuItem> \n        </Select>\n       </FormControl>\n     </Grid>\n\n     <Grid item xs ={6}>\n      <FormControl fullWidth>\n       <InputLabel> Category</InputLabel>\n       <Select value ={formData?.category} onChange={ (e)=>setFormData({...formData,category:e.target.value})}>\n       {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\n        \n\n       </Select>\n      </FormControl>\n     </Grid>\n\n     <Grid item xs ={6}>\n         <TextField type= \"number\" label =\"Amount\" fullWidth value ={formData?.amount} onchange={(e)=>setFormData({...formData,amount : e.target.value}) }/>\n       </Grid>\n\n       <Grid item xs ={6}>\n         <TextField  type= \"date\" label =\"Date\" fullWidth value ={formData?.date} onchange={(e)=>setFormData({...formData,date: formatDate(e.target.value)}) }/>\n       </Grid>\n       <Button className={classes.button} variant=\"outlined\" color =\"primary\" fullWidth onclick={createTransaction}>Create </Button>\n\n   </Grid>\n  ) \n}\n\nexport default NewTransactionForm ;","/home/agevi/web/buget_app/src/components/Main/List/List.jsx",[],"/home/agevi/web/buget_app/src/constants/categories.js",[],"/home/agevi/web/buget_app/src/components/Main/List/styles.js",[],"/home/agevi/web/buget_app/src/utils/formatDate.js",[],"/home/agevi/web/buget_app/src/components/Main/Form/styles.js",[],"/home/agevi/web/buget_app/src/components/Snackbar/Snackbar.jsx",["166"],"import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nimport useStyles from './styles';\n\nconst CustomizedSnackbar = (open,setOpen) => {\n    const classes= useStyles();\n\n    const handleClose =  (event,reason) =>{ \n        if(reason==='clickaway')return;\n        setOpen(false);\n    }\n  return (\n    <div>\n<Snackbar\nanchorOrigin={ { vertical:'top',horizontal:'right'}}\nopen ={true}\nautoHideDuration={3000}\nonclose={handleClose}\n>\n<MuiAlert   onClose={handleClose} severity =\"success\" elevation={6} variant=\"filled\">\n    \n    transaction sucessfully created\n    </MuiAlert> \n</Snackbar>\n    </div>\n  )\n}\n\nexport default CustomizedSnackbar","/home/agevi/web/buget_app/src/components/Snackbar/styles.js",[],{"ruleId":"167","severity":1,"message":"168","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":25},{"ruleId":"167","severity":1,"message":"171","line":1,"column":27,"nodeType":"169","messageId":"170","endLine":1,"endColumn":36},{"ruleId":"167","severity":1,"message":"172","line":3,"column":10,"nodeType":"169","messageId":"170","endLine":3,"endColumn":26},{"ruleId":"173","severity":1,"message":"174","line":78,"column":6,"nodeType":"175","endLine":78,"endColumn":15,"suggestions":"176"},{"ruleId":"177","severity":1,"message":"178","line":1,"column":1,"nodeType":"179","endLine":11,"endColumn":3},{"ruleId":"173","severity":1,"message":"180","line":71,"column":3,"nodeType":"175","endLine":71,"endColumn":12,"suggestions":"181"},{"ruleId":"167","severity":1,"message":"182","line":8,"column":11,"nodeType":"169","messageId":"170","endLine":8,"endColumn":18},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useSpeechContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["183"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'createTransaction', 'formData', and 'setFormData'. Either include them or remove the dependency array.",["184"],"'classes' is assigned a value but never used.",{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"189","text":"190"},"Update the dependencies array to be: [createTransaction, formData, segment, setFormData]",{"range":"191","text":"192"},[3006,3015],"[createTransaction, formData, segment]",[2780,2789],"[createTransaction, formData, segment, setFormData]"]